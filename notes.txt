sorted notes...
  should you be able to inform the uniq, etc, methods that a collection is sorted?
  once a collection is sorted, and it's in object-style, should it remember that it's sorted?
    should it somehow evaluate whether new members added mean it's still sorted?
    should you be able to sort on insertion?
  should you be able to say to uniq, "do try to check the array, to see if it's sorted, then determine whether to use a cheap or expensive algorithm (sort + uniq vs just uniq)".  The degenerate case is sort cost + 2N vs sort cost + N

need to implement sort and make the set-style methods not be n^n

bang methods do work in place
  you need in-place editing capability to do things in place
    append is an example of in-place editing
      same with comparable
        once this feature is available, attempt to determine whether a 
          collection is sorted before intersect, uniq, differ, etc
            ...test-drive using cost


cost should really be counted by # of next's, not in 'each'

would be neat if you could dictate space- or time-efficient

tests for array and some canonical non-array

named-param style
  defaults?

accumulated cost makes things ugly.  what to do?

things that should be configurable:
  - what gets returned when there's no match
  - signal for breaking out of a loop
  
  - function names...
  
...just yield the functions, k-v style, and allow the caller to decide what to do...

later: good errors for when you don't define a feature.
  checkFeatures() ?